# 数据库
spring.datasource.url=jdbc:mysql://112.124.9.174:3306/food
spring.datasource.username=wc
spring.datasource.password=1140
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 上传文件
spring.servlet.multipart.max-file-size= 50MB
spring.servlet.multipart.max-request-size= 50MB

# 设置Redis配置（不要开放端口，保证安全性！！！！）
spring.redis.host=112.124.9.174
spring.redis.port=6379
spring.redis.password=Ipgy8e1vjG0V$GP

server.tomcat.accesslog.enabled=true  
logging.level.org.apache.tomcat=DEBUG  
logging.level.org.apache.catalina=DEBUG

# 开启sql语句运行显示
logging.level.com.example.spring_food.dao=debug

#RabbitMQ的IP地址
spring.rabbitmq.host=112.124.9.174
#rabbitmq服务端口号
spring.rabbitmq.port=5672
#rabbitmq虚拟主机
spring.rabbitmq.virtual-host=/
#用户名
spring.rabbitmq.username=admin
#密码
spring.rabbitmq.password=admin
# 开启confirm模式，确保消息成功发送到交换器
# spring.rabbitmq.publisher-confirms=true报错
spring.rabbitmq.publisher-confirm-type=correlated
# 设置容器类型
spring.rabbitmq.listener.type=simple
# basicReject或basicNack后不重新入队，使其进入死信队列
spring.rabbitmq.listener.simple.default-requeue-rejected=false
# 选择使用手动ack，不使用自动ack
spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 开启消息消费失败重试
spring.rabbitmq.listener.simple.retry.enabled=true
# 重试次数
spring.rabbitmq.listener.simple.retry.max-attempts=5
# 重试时间间隔
spring.rabbitmq.listener.simple.retry.initial-interval=3000


